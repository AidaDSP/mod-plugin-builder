#!/bin/bash

# @TODO: you need to check with ldd --version
# the version of glibc. On mod build you can
# check the glibc version by doing grep -r CT_GLIBC_VERSION *.config
# in toolchain dir
function check_dependencies () {
    PLUGINPATH=$1
    TARGETROOTFS=$2

    # Check we actually have shared objs in path
    res=$(ls $PLUGINPATH/*.so 2>/dev/null)
    if [ "$res" == "" ]; then
        echo "There are no .so in $PLUGINPATH"
        return 1
    fi

    for sobjpath in $PLUGINPATH/*.so; do
        sobj=${sobjpath##*/}
        #echo "Checking dependencies for $sobj"
        deplist=$(objdump -p $sobjpath 2>/dev/null | grep NEEDED | tr -d "  NEEDED               ")
        for dep in $deplist; do
            res=$(find $TARGETROOTFS/usr/lib -name "$dep" 2>/dev/null)
            if [ "$res" == "" ]; then
                res=$(find $TARGETROOTFS/lib -name "$dep" 2>/dev/null)
                if [ "$res" == "" ]; then
                    echo "Dependency $dep not satisfied for $sobj in $sobjpath"
                    return 1
                fi
            else
                continue
            fi
        done
    done
    return 0
}

PLATFORM=$1
INPUTDIR=$2
OUTPUTDIR=$3
TARGETROOTFS=$4

if [[ "${PLATFORM}" == "" ]] || [[ ${INPUTDIR}" == "" ]] || [[ "${OUTPUTDIR}" == "" ]] || [[ ${TARGETROOTFS}" == "" ]]; then
    echo "Usage: $0 <platform> <input> <outputdir> <targetrootfs>"
    echo "  Where platform can be modduo[-static], modduox[-static], moddwarf or x86_64"
    echo "  inputdir is a directory where there are compiled plugins"
    echo "  outputdir is a directory where you want to copy the compiled plugins"
    echo "  that have their dependencies satisfied into the provided targetrootfs"
    exit 1
fi

echo "Starting $0 with PLATFORM=$PLATFORM OUTPUTDIR=$OUTPUTDIR TARGETROOTFS=$TARGETROOTFS"

mkdir -p $OUTPUTDIR

for pluginpath in $INPUTDIR/*; do
    plugin=${pluginpath##*/}
    #echo "Processing $plugin"
    check_dependencies "$pluginpath" "$TARGETROOTFS"
    res=$?
    if [ $res -eq 0 ]; then
        #echo "Deploying $plugin"
        cp -r $pluginpath $OUTPUTDIR
    else
        echo "Plugin $plugin deploy will be skipped"
    fi 
done
