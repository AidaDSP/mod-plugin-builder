diff --git a/common/JackClient.cpp b/common/JackClient.cpp
index 7334a57..de78ecd 100644
--- a/common/JackClient.cpp
+++ b/common/JackClient.cpp
@@ -32,6 +32,37 @@ Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 #include <string>
 #include <algorithm>
 
+/* Disables denormal numbers in floating point calculation. Denormal numbers
+ * happens often in IIR filters, and it can be very slow.
+ */
+/* Taken from cras/src/dsp/dsp_util.c in Chromium OS code.
+ * Copyright (c) 2013 The Chromium OS Authors. */
+static void dsp_enable_flush_denormal_to_zero()
+{
+#if defined(__i386__) || defined(__x86_64__)
+        unsigned int mxcsr;
+        mxcsr = __builtin_ia32_stmxcsr();
+        __builtin_ia32_ldmxcsr(mxcsr | 0x8040);
+#elif defined(__aarch64__)
+        uint64_t cw;
+        __asm__ __volatile__ (
+                "mrs    %0, fpcr                            \n"
+                "orr    %0, %0, #0x1000000                  \n"
+                "msr    fpcr, %0                            \n"
+                "isb                                        \n"
+                : "=r"(cw) :: "memory");
+#elif defined(__arm__)
+        uint32_t cw;
+        __asm__ __volatile__ (
+                "vmrs   %0, fpscr                           \n"
+                "orr    %0, %0, #0x1000000                  \n"
+                "vmsr   fpscr, %0                           \n"
+                : "=r"(cw) :: "memory");
+#else
+#warning "Don't know how to disable denorms. Performace may suffer."
+#endif
+}
+
 using namespace std;
 
 namespace Jack
@@ -492,6 +523,8 @@ int JackClient::Deactivate()
 
 void JackClient::InitAux()
 {
+    dsp_enable_flush_denormal_to_zero();
+
     if (fInit) {
         jack_log("JackClient::Init calling client thread init callback");
         fInit(fInitArg);
