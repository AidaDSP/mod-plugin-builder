diff --git a/common/JackAudioDriver.cpp b/common/JackAudioDriver.cpp
index e699bef..2202a61 100644
--- a/common/JackAudioDriver.cpp
+++ b/common/JackAudioDriver.cpp
@@ -247,7 +247,6 @@ void JackAudioDriver::ProcessGraphAsyncMaster()
 {
     // fBeginDateUst is set in the "low level" layer, fEndDateUst is from previous cycle
     if (!fEngine->Process(fBeginDateUst, fEndDateUst)) {
-        jack_error("JackAudioDriver::ProcessGraphAsyncMaster: Process error");
     }
 
     if (ResumeRefNum() < 0) {
diff --git a/common/JackEngine.cpp b/common/JackEngine.cpp
index 1507659..8883663 100644
--- a/common/JackEngine.cpp
+++ b/common/JackEngine.cpp
@@ -218,12 +218,10 @@ void JackEngine::CheckXRun(jack_time_t callback_usecs)  // REVOIR les conditions
             jack_time_t finished_date = timing->fFinishedAt;
 
             if (status != NotTriggered && status != Finished) {
-                jack_error("JackEngine::XRun: client = %s was not finished, state = %s", client->GetClientControl()->fName, State2String(status));
                 fChannel.Notify(ALL_CLIENTS, kXRunCallback, 0);  // Notify all clients
             }
 
             if (status == Finished && (long)(finished_date - callback_usecs) > 0) {
-                jack_error("JackEngine::XRun: client %s finished after current callback", client->GetClientControl()->fName);
                 fChannel.Notify(ALL_CLIENTS, kXRunCallback, 0);  // Notify all clients
             }
         }
