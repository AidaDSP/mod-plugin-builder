diff --git a/convoLV2/build/convoLV2.so b/convoLV2/build/convoLV2.so
index 2d3dae8..f58ac5c 100755
Binary files a/convoLV2/build/convoLV2.so and b/convoLV2/build/convoLV2.so differ
diff --git a/convoLV2/convolution.cc b/convoLV2/convolution.cc
index 22076bf..40c846e 100644
--- a/convoLV2/convolution.cc
+++ b/convoLV2/convolution.cc
@@ -52,8 +52,6 @@
 #define SRC_QUALITY SRC_SINC_MEDIUM_QUALITY
 #endif
 
-static pthread_mutex_t fftw_planner_lock = PTHREAD_MUTEX_INITIALIZER;
-
 struct LV2convolv {
   Convproc *convproc;
 
@@ -339,8 +337,6 @@ int clv_initialize (
     return -1;
   }
 
-  pthread_mutex_lock(&fftw_planner_lock);
-
   clv->convproc = new Convproc;
   clv->convproc->set_options (options);
   clv->convproc->set_density (clv->density);
@@ -356,7 +352,6 @@ int clv_initialize (
     fprintf (stderr, "convoLV2: Cannot initialize convolution engine.\n");
     delete(clv->convproc);
     clv->convproc = NULL;
-    pthread_mutex_unlock(&fftw_planner_lock);
     return -1;
   }
 
@@ -364,7 +359,6 @@ int clv_initialize (
     fprintf(stderr, "convoLV2: failed to read IR.\n");
     delete(clv->convproc);
     clv->convproc = NULL;
-    pthread_mutex_unlock(&fftw_planner_lock);
     return -1;
   }
 
@@ -372,7 +366,6 @@ int clv_initialize (
   if (!gb) {
     fprintf (stderr, "convoLV2: memory allocation failed for convolution buffer.\n");
     free(p);
-    pthread_mutex_unlock(&fftw_planner_lock);
     return -1;
   }
 
@@ -399,7 +392,6 @@ int clv_initialize (
       free(p); free(gb);
       delete(clv->convproc);
       clv->convproc = NULL;
-      pthread_mutex_unlock(&fftw_planner_lock);
       return -1;
 #else
       clv->ir_chan[c] = ((clv->ir_chan[c]-1)%nchan)+1;
@@ -433,11 +425,9 @@ int clv_initialize (
     fprintf(stderr, "convoLV2: Cannot start processing.\n");
     delete(clv->convproc);
     clv->convproc = NULL;
-    pthread_mutex_unlock(&fftw_planner_lock);
     return -1;
   }
 
-  pthread_mutex_unlock(&fftw_planner_lock);
   return 0;
 }
 
