From 8c09eb1e6145e94014f3a41fdeabc1b9c1a23dfa Mon Sep 17 00:00:00 2001
From: falkTX <falktx@falktx.com>
Date: Wed, 12 Oct 2022 13:16:03 +0100
Subject: [PATCH] Use less hardcoded values

Signed-off-by: falkTX <falktx@falktx.com>
---
 src/convolver.cc      | 11 ++++++-----
 src/zeta-convolver.cc |  6 +++---
 2 files changed, 9 insertions(+), 8 deletions(-)

diff --git a/src/convolver.cc b/src/convolver.cc
index eeb27c0..1ff3432 100644
--- a/src/convolver.cc
+++ b/src/convolver.cc
@@ -92,17 +92,18 @@ TimeDomainConvolver::TimeDomainConvolver ()
 void
 TimeDomainConvolver::reset ()
 {
-	memset (_ir, 0, 64 * sizeof (float));
+	memset (_ir, 0, sizeof (_ir));
 	_enabled = false;
 }
 
 void
 TimeDomainConvolver::configure (Readable* r, float gain, uint32_t delay)
 {
-	if (delay >= 64) {
+	const uint32_t _ir_len = sizeof (_ir) / sizeof (float);
+	if (delay >= _ir_len) {
 		return;
 	}
-	uint32_t to_read = std::min ((uint32_t)64, delay);
+	uint32_t to_read = std::min (_ir_len, delay);
 	uint32_t max_len = r->readable_length ();
 	if (delay < max_len) {
 		to_read = std::min (to_read, max_len - delay);
@@ -114,7 +115,7 @@ TimeDomainConvolver::configure (Readable* r, float gain, uint32_t delay)
 	r->read (&_ir[delay], 0, to_read, 0);
 
 	if (gain != 1.f) {
-		for (uint64_t i = delay; i < 64; ++i) {
+		for (uint32_t i = delay; i < _ir_len; ++i) {
 			_ir[i] *= gain;
 		}
 	}
@@ -414,7 +415,7 @@ Convolver::output (float* dst, const float* src, uint32_t n) const
 	} else {
 		const float dry = _dry;
 		const float wet = _wet;
-		for (uint64_t i = 0; i < n; ++i) {
+		for (uint32_t i = 0; i < n; ++i) {
 			dst[i] = dry * dst[i] + wet * src[i];
 		}
 	}
diff --git a/src/zeta-convolver.cc b/src/zeta-convolver.cc
index b6d19e6..5da240a 100644
--- a/src/zeta-convolver.cc
+++ b/src/zeta-convolver.cc
@@ -91,9 +91,9 @@ Convproc::Convproc (void)
 	, _nlevels (0)
 	, _latecnt (0)
 {
-	memset (_inpbuff, 0, MAXINP * sizeof (float*));
-	memset (_outbuff, 0, MAXOUT * sizeof (float*));
-	memset (_convlev, 0, MAXLEV * sizeof (Convlevel*));
+	memset (_inpbuff, 0, sizeof (_inpbuff));
+	memset (_outbuff, 0, sizeof (_outbuff));
+	memset (_convlev, 0, sizeof (_convlev));
 }
 
 Convproc::~Convproc (void)
